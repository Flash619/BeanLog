@model BeanLog.Shared.Web.Areas.Identity.Models.LoginModel

@{
    ViewData["Title"] = "Login";
    Layout = "_PreLoginLayout";
}

<form asp-controller="Account" asp-action="Login" asp-area="Identity" method="post" role="form">
    @if (Context.Request.Query.TryGetValue("JustRegistered", out var justRegisteredVal) && justRegisteredVal.FirstOrDefault() == "True")
    {
        <div class="alert alert-success">
            <h4 class="alert-heading">Registration successful!</h4>
            <p>Your account has been registered. Login to continue.</p>
        </div>
    }
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group mt-1">
        <label for="emailAddress">EmailAddress</label>
        <input asp-for="EmailAddress" type="text" class="form-control" id="emailAddress" placeholder="Enter Email Address"/>
        <div class="invalid-feedback"><span asp-validation-for="EmailAddress"></span></div>
    </div>
    <div class="form-group mt-2">
        <label for="password">Password</label>
        <input asp-for="Password" type="password" class="form-control" id="password" placeholder="Enter Password"/>
        <div class="invalid-feedback"><span asp-validation-for="Password"></span></div>
    </div>
    <div class="form-check mt-2">
        <input asp-for="Persistent" type="checkbox" class="form-check-input" id="remember-me">
        <label class="form-check-label" for="remember-me">Stay signed in.</label>
        <div class="invalid-feedback"><span asp-validation-for="Persistent"></span></div>
    </div>
    <input asp-for="ReturnUrl" type="hidden"/>
    <button type="submit" class="btn btn-primary mt-2">Login</button>
    <a class="btn btn-secondary mt-2" asp-action="" target="_self">Recover Account</a>
    <a class="btn btn-secondary mt-2" asp-action="Register" target="_self">Register</a>
</form>